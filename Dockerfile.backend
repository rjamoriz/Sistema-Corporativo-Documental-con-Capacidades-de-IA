# Dockerfile para Backend de FinancIA 2030
# ✅ GPU SUPPORT VERIFIED: NVIDIA GeForce RTX 4070 (8GB VRAM) - CUDA 12.8
# Sistema compatible con aceleración GPU mediante Docker + WSL2 + NVIDIA Container Toolkit
# Para ejecutar con GPU: docker run --gpus all <image>
FROM python:3.11-slim

# Variables de entorno
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    tesseract-ocr \
    poppler-utils \
    && rm -rf /var/lib/apt/lists/*

# Crear directorio de trabajo
WORKDIR /app

# Copiar requirements
COPY backend/requirements.txt .

# Instalar versiones compatibles de numpy y scipy primero (para evitar conflictos)
RUN pip install --upgrade pip && \
    pip install --no-cache-dir "numpy==1.24.3" "scipy==1.11.4"

# Instalar dependencias Python (sin reinstalar numpy)
RUN pip install --no-cache-dir --no-deps -r requirements.txt || true && \
    pip install --no-cache-dir -r requirements.txt

# Descargar modelos de spaCy (compatible con spaCy 3.6.1 + Pydantic 2)
# Intentar descargar modelo mediano, con fallback a modelo pequeño
RUN python -m spacy download es_core_news_md || \
    python -m spacy download es_core_news_sm || \
    echo "spaCy model will be downloaded at runtime"

# Copiar código del backend
COPY backend/ .

# Crear directorios necesarios
RUN mkdir -p logs data/ontology uploads

# Exponer puerto
EXPOSE 8000

# Comando de inicio
CMD ["python", "main.py"]
